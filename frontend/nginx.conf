server {
    listen 80;
    server_name localhost arriving-rich-unicorn.ngrok-free.app;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Frontend static files
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Add correct content type for manifest
        if ($request_uri ~* manifest.json$) {
            add_header Content-Type application/manifest+json;
        }

        # CORS headers for main site
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
    }

    # API proxy
    location /api/ {
        proxy_pass http://localhost:$API_PORT;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header ngrok-skip-browser-warning "true";
        proxy_set_header Cookie $http_cookie;  # Forward cookies
        
        # CORS headers for API
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*,ngrok-skip-browser-warning' always;
        
        # Handle OPTIONS method
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*,ngrok-skip-browser-warning';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location /service-worker.js {
        root /usr/share/nginx/html;
        add_header Service-Worker-Allowed "/";
        add_header Content-Type application/javascript;
    }

    # Move types block outside of server block if not already
    types {
        text/html                             html htm shtml;
        text/css                              css;
        text/javascript                       js;
        application/json                      json;
        application/manifest+json             webmanifest json;
        image/png                             png;
        image/x-icon                          ico;
    }
} 